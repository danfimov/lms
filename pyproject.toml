[tool.poetry]
name = "lms"
version = "0.1.0"
description = ""
authors = ["Anfimov Dima <danfimov@yandex-team.ru>"]
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.12"
fastapi = "^0.115.0"
pydantic = "^2.9.2"
sqlalchemy = "^2.0.35"
alembic = "^1.13.3"

[tool.poetry.group.dev.dependencies]
pytest = "^8.3.3"
pytest-cov = "^5.0.0"
pytest-asyncio = "^0.24.0"
sqlalchemy-utils = "^0.41.2"
ruff = "^0.6.9"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
[tool.pytest]
python_files = "test_*.py"
python_classes = ["*Test", "Test*"]
python_functions = "test_*"
testpaths = "tests/"

[tool.coverage.report]
exclude_lines = [
    "# pragma: no cover",
    "def __repr__",
    "def __str__",
    "def __unicode__",
]
show_missing = true
skip_empty = true
omit = [
  "*/__init__.py",
]

[tool.coverage.html]
directory = "pytest-cov-report"

[tool.coverage.run]
branch = true
concurrency = ['thread', 'greenlet']

[tool.pytest.ini_options]
asyncio_mode = "auto"
markers = [
    "unit: marks unit tests",
    "integration: marks tests with real infrastructure env",
    "linting: marks tests as linter/static analyzers"
]

[tool.ruff]
line-length = 120
target-version = "py312"

[tool.ruff.lint]
ignore = []
select = ["E", "F", "I001"]

[tool.ruff.lint.mccabe]
# Unlike Flake8, default to a complexity level of 10.
max-complexity = 10

[tool.ruff.lint.isort]
known-local-folder = ["lms"]
lines-after-imports = 2

[tool.mypy]
check_untyped_defs = true
disallow_incomplete_defs = true
disallow_untyped_defs = true
ignore_missing_imports = false
no_implicit_optional = true
plugins = ["sqlalchemy.ext.mypy.plugin"]
